// Mocks generated by Mockito 5.0.7 from annotations
// in trivia/test/unit_test/repository/trivia_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:dio/src/dio.dart' as _i2;
import 'package:dio/src/dio_error.dart' as _i6;
import 'package:dio/src/response.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:trivia/core/services/network_service.dart' as _i4;

// ignore_for_file: comment_references
// ignore_for_file: unnecessary_parenthesis

// ignore_for_file: prefer_const_constructors

// ignore_for_file: avoid_redundant_argument_values

class _FakeDio extends _i1.Fake implements _i2.Dio {}

class _FakeResponse<T> extends _i1.Fake implements _i3.Response<T> {}

/// A class which mocks [NetworkService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkService extends _i1.Mock implements _i4.NetworkService {
  MockNetworkService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Dio get dio =>
      (super.noSuchMethod(Invocation.getter(#dio), returnValue: _FakeDio())
          as _i2.Dio);
  @override
  _i5.Future<_i3.Response<dynamic>> get(
          {String? path, Map<String, dynamic>? query}) =>
      (super.noSuchMethod(
              Invocation.method(#get, [], {#path: path, #query: query}),
              returnValue:
                  Future<_i3.Response<dynamic>>.value(_FakeResponse<dynamic>()))
          as _i5.Future<_i3.Response<dynamic>>);
  @override
  String getErrorMessage(_i6.DioError? error) =>
      (super.noSuchMethod(Invocation.method(#getErrorMessage, [error]),
          returnValue: '') as String);
}
